on:
  push:
    branches:
      - master

name: Build and Publish
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node and cache dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install

      - name: Bump package version
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const packageJson = require('./package.json');
            const npmRegistryUrl = 'https://registry.npmjs.org';

            const currentPackageVersion = await fetch(`${npmRegistryUrl}/${packageJson.name}/latest`).then(async (res) => (await res.json()).version);

            const commitMessage = context.payload.head_commit.message;
            let [major, minor, patch] = currentPackageVersion.split('.').map(v => parseInt(v, 10));
            if (commitMessage.includes('BREAKING CHANGE') || commitMessage.includes('!:')) {
              major++;
            } else if (commitMessage.toLowerCase().startsWith('feat')) {
              minor++;
            } else {
              patch++;
            }
            const newPackageVersion = `${major}.${minor}.${patch}`;

            exec.exec(`npm version ${newPackageVersion} --no-git-tag-version`);
      - name: Build
        run: npm run build

      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          npm publish
          git checkout package.json
